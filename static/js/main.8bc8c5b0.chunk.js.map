{"version":3,"sources":["events/emitter.js","utilities.js","components/mazeGraphComponents/MZNode/MZNode.js","components/mazeGraphComponents/events.js","components/mazeGraphComponents/MZNode/UserNode.jsx","components/mazeGraphComponents/MZNode/MZNodeFactory.js","components/mazeGraphComponents/DestNode.jsx","components/mazeGraphComponents/MazePath.jsx","components/mazeGraphComponents/MZWall.jsx","mazeRenderers/levelOne.js","components/mazeGraphComponents/MZGraph.jsx","components/settings/SettingsRow.jsx","utilities/keyboardEventHelper.js","components/containers/MazeContainer.jsx","components/containers/GameContainer.jsx","components/App.js","index.js"],"names":["eventServer","mazeGraphDefaults","desktopSpacing","mobileSpacing","getOrthogonalKey","x1","y1","x2","y2","high","dX","wY2","wY1","wX1","wX2","Error","concat","validateInputsForOrthogonalKey","toString","shuffle","array","buffer","i","length","j","Math","floor","random","temp","MZNode","_ref","x","y","isStart","isDest","disoveredBy","Object","classCallCheck","this","key","isVisited","distFromStart","discoveredBy","siblingKeys","getInstance","options","arguments","undefined","initParams","objectSpread","wildcard","delimiter","newListener","maxListeners","verboseMemoryLeak","EventEmitter2","events","MAZEGAME","GAMESTART","DESTFOUND","GAMEOVER","on","data","cb","console","log","UserNode","props","_this","possibleConstructorReturn","getPrototypeOf","call","gohome","self","graph","cooldown","keyboardCoolDown","Velocity","animate","e","current","p","rotateZ","o","duration","setTimeout","userNodeRef","cx","cy","completion","keyboardListener","which","move","offset","maybeKeepMoving","backwardsKey","keys","nodeMap","nextKey","forEach","_nextKey$split","split","_nextKey$split2","slicedToArray","newXposStr","newYposStr","_current$split","_current$split2","oldXposStr","oldYposStr","translation","currentKey","nextX","nextY","newKey","assertThisInitialized","destNodeKey","emit","startX","startY","mzGraphRef","componentDidMount","startNodeKey","parseInt","r","destnodekey","map","handleswipebindings","focus","componentDidUpdate","n","sibs","k","mzgraphref","render","react_default","a","createElement","ref","onKeyDown","onBlur","className","tabIndex","React","createRef","Component","MazeNodeFactory","buildNodeArray","rows","cols","spacing","arrayOfNodes","push","removeAllSiblings","nodes","val","addSiblings","params","nodeArray","r2","round","bindNodes","nodeKeys","_nodeKeys","key1","key2","nodeRef1","_","find","nodeRef2","uniq","_ref2","DestNode","MazePath","nodeKey1","nodeKey2","id","_this$id$split$map","el","_this$id$split$map2","crossWall","MazePathFactory","getPathsWithRowsAndCols","pathCache","getPathsWithInactiveWalls","excludeWalls","w","_w$split","_w$split2","_getOrthogonalKey$spl","_getOrthogonalKey$spl2","MZWall","_React$Component","_getPrototypeOf2","_len","args","Array","_key","apply","state","css","pathKey","getPathKey","d","inherits","createClass","value","_this2","_this$props","setState","MazeWallFactory","getWalls","wallCache","filter","includes","LevelOne","maze","route","maxDx","clonedNode","JSON","parse","stringify","clonedKeys","toConsumableArray","dXFromStart","startNode","mazeData","prepareLocalDataStore","generateMazeWithDfs","sibKey","sib","_this3","stack","_loop","pop","visit","updateCount","_n$discoveredBy$split","_n$discoveredBy$split2","discX","discY","_n$key$split","_n$key$split2","nX","nY","_x1$y1$x2$y","correspondingWallToInactivate","MZGraph","prevState","width","height","currentLevel","getNodes","result","run","_result$destNodeKey$s","_result$destNodeKey$s2","destNodeX","destNodeY","walls","allPaths","updateSiblingsUsingPaths","clonedNodes","mazePath","_mazePath$nodeKeys","node1","node2","getUserControlNode","UserNode_UserNode","DEFAULTS","mazeGraphRef","getInnerWalls","wall","MZWall_MZWall","getOutterWalls","Fragment","mazeGraphComponents_DestNode","SettingsRow","refreshMaze","window","location","reload","type","onClick","KEYCODEMAP","UP","DOWN","RIGHT","LEFT","MazeContainer","windowHeight","innerHeight","windowWidth","innerWidth","synthClick","handleSwipeBindings","getSwipeProps","onSwipeUp","onSwipeDown","onSwipeLeft","onSwipeRight","onSwipeMove","lib_default","MZGraph_MZGraph","SettingsRow_SettingsRow","GameContainer","MazeContainer_MazeContainer","App","GameContainer_GameContainer","ReactDOM","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.8bc8c5b0.chunk.js","sourcesContent":["import EventEmitter2 from 'eventemitter2';\n\nlet eventServer;\nfunction getInstance(options = {}) {\n  if (!eventServer) {\n    const initParams = {\n      wildcard: true,\n      delimiter: '::',\n      newListener: false,\n      maxListeners: 0,\n      verboseMemoryLeak: true,\n      ...options,\n    };\n    eventServer = new EventEmitter2(initParams);\n  }\n\n  return eventServer;\n}\n\n\nexport default getInstance;\n","export const getScreenDimensions = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth,\n});\n\nexport const mazeGraphDefaults = {\n  desktopSpacing: 60,\n  mobileSpacing: 50,\n};\n\nconst validateInputsForOrthogonalKey = (x1, y1, x2, y2) => {\n  if (typeof x1 !== 'number') {\n    throw new Error(`improper parameter ${x1} passed to getOrthogonalKey function`);\n  } else if (typeof y1 !== 'number') {\n    throw new Error(`improper parameter ${y1} passed to getOrthogonalKey function`);\n  } else if (typeof x2 !== 'number') {\n    throw new Error(`improper parameter ${x2} passed to getOrthogonalKey function`);\n  } else if (typeof y2 !== 'number') {\n    throw new Error(`improper parameter ${y2} passed to getOrthogonalKey function`);\n  }\n};\n\nlet coolDown = false;\n\nexport const getOrthogonalKey = (x1, y1, x2, y2) => {\n  validateInputsForOrthogonalKey(x1, y1, x2, y2);\n\n  let high;\n  let low;\n  let dX;\n  let wY2;\n  let wY1;\n  let wX1;\n  let wX2;\n\n  // for horizontal situations\n  if (x1 === x2) {\n    high = y2 > y1 ? y2 : y1;\n    low = y2 !== high ? y2 : y1;\n    dX = ((high - low) / 2);\n    wY2 = high - dX;\n    wY1 = wY2;\n    wX1 = x1 - dX;\n    wX2 = x1 + dX;\n  } else {\n    // for vertical situations\n    high = x2 > x1 ? x2 : x1;\n    low = x2 !== high ? x2 : x1;\n    dX = ((high - low) / 2);\n    wX2 = high - dX;\n    wX1 = wX2;\n    wY1 = y1 - dX;\n    wY2 = y1 + dX;\n  }\n\n  return `${wX1.toString()}.${wY1.toString()}.${wX2.toString()}.${wY2.toString()}`;\n};\n\nexport const getOrthogonalKeyForMazeRendering = (x1, y1, x2, y2) => {\n  // validateInputsForOrthogonalKey(x1, y1, x2, y2);\n\n  let high;\n  let low;\n  let dX;\n  let wY2;\n  let wY1;\n  let wX1;\n  let wX2;\n\n  // for horizontal situations\n  if (x1 === x2) {\n    high = y2 > y1 ? y2 : y1;\n    low = y2 !== high ? y2 : y1;\n    dX = ((high - low) / 2);\n    wY2 = high - dX;\n    wY1 = wY2;\n    wX1 = x1 - dX;\n    wX2 = x1 + dX;\n  } else {\n    // for vertical situations\n    high = x2 > x1 ? x2 : x1;\n    low = x2 !== high ? x2 : x1;\n    dX = ((high - low) / 2);\n    wX2 = high - dX;\n    wX1 = wX2;\n    wY1 = y1 - dX;\n    wY2 = y1 + dX;\n  }\n\n\n  const returnString = `${wX1.toString()}.${wY1.toString()}.${wX2.toString()}.${wY2.toString()}`;\n\n  if (!coolDown) {\n    console.log(`orientation: ${(x1 === x2) ? 'horizontal' : 'vertical'}`);\n    console.log(`                high: ${high}`);\n    console.log(`                 low: ${low}`);\n    console.log(`                  dX: ${dX}`);\n    console.log(`      x1, y1, x2, y2: ${x1}, ${y1}, ${x2}, ${y2}`);\n    console.log(`  wX1, wY1, wX2, wY2: ${wX1}, ${wY1}, ${wX2}, ${wY2}`);\n    console.log(` val of returnString: ${returnString}`);\n    coolDown = true;\n  }\n\n  return returnString;\n};\n\nexport const shuffle = (array) => {\n  const buffer = array;\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    buffer[i] = array[j];\n    buffer[j] = temp;\n  }\n  return buffer;\n};\n\nexport const DEVICETYPES = {\n  MOBILE: 0,\n  DESKTOP: 1,\n  TABLET: 2,\n};\n","export default class MZNode {\n  constructor({ x, y, isStart, isDest, disoveredBy }) {\n    this.key = `${+x}.${+y}`;\n    this.isVisited = false;\n    this.isDest = isDest;\n    this.isStart = isStart;\n    this.distFromStart = 0;\n    this.discoveredBy = disoveredBy;\n    this.siblingKeys = [];\n  }\n}\n","import { getInstance } from '../../events/index';\n\nexport const eventServer = getInstance();\n\nexport const events = {\n  MAZEGAME: {\n    GAMESTART: 'MZGAME::START',\n    DESTFOUND: 'MZGAME::DESTFOUND',\n    GAMEOVER: 'MZGAME::GAMEOVER',\n  },\n};\n\n/** UserControl Node Events */\neventServer.on(events.MAZEGAME.DESTFOUND, (data, cb) => {\n  console.log(`${events.MAZEGAME.DESTFOUND} Event Fired`);\n  console.log(data);\n  cb(data);\n});\n","/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\n\nimport React from 'react';\nimport Velocity from 'velocity-animate';\nimport { eventServer, events } from '../events';\n\nexport default class UserNode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.userNodeRef = React.createRef();\n    this.nodeMap = {};\n    this.cooldown = false;\n    this.keyboardCoolDown = false;\n    this.mzGraphRef = null;\n  }\n\n  gohome = ({ x, y, self, graph }) => {\n    self.cooldown = true;\n    self.keyboardCoolDown = true;\n\n    Velocity.animate({\n      e: graph.current,\n      p: { rotateZ: '-=1440' },\n      o: { duration: 1500 },\n    });\n\n    setTimeout(() => {\n      Velocity.animate({\n        e: self.userNodeRef.current,\n        p: {\n          cx: x,\n          cy: y,\n          completion: () => {\n            self.cooldown = false;\n            self.keyboardCoolDown = false;\n            self.x = x;\n            self.y = y;\n          },\n        },\n        o: {\n          duration: 750,\n        },\n      });\n    }, 1550);\n  };\n\n  keyboardListener = (e) => {\n    if (this.cooldown || this.keyboardCoolDown) {\n      return;\n    }\n\n    setTimeout(() => {\n      this.keyboardCoolDown = true;\n    }, 0);\n\n    setTimeout(() => {\n      this.keyboardCoolDown = false;\n    }, 250);\n\n    // UP: 38,\n    // DOWN: 40,\n    // RIGHT: 39,\n    // LEFT: 37,\n\n    switch (e.which) {\n      default:\n      case 38:\n      case 87: return this.move({ y: -this.offset });\n      case 40:\n      case 83: return this.move({ y: this.offset });\n      case 39:\n      case 68: return this.move({ x: this.offset });\n      case 37:\n      case 65: return this.move({ x: -this.offset });\n    }\n  };\n\n  maybeKeepMoving = (current, backwardsKey) => {\n    const siblingKeys = Object.keys(this.nodeMap[current]);\n    if (siblingKeys.length === 2) {\n      let nextKey = null;\n      siblingKeys.forEach((key) => {\n        if (key !== backwardsKey) {\n          nextKey = key;\n        }\n      });\n\n      const [newXposStr, newYposStr] = nextKey.split('.');\n      const [oldXposStr, oldYposStr] = current.split('.');\n\n      if (newXposStr !== oldXposStr) {\n        this.move({ x: +newXposStr < +oldXposStr ? -this.offset : this.offset });\n      } else if (newYposStr !== oldYposStr) {\n        this.move({ y: +newYposStr < +oldYposStr ? -this.offset : this.offset });\n      }\n    }\n    this.cooldown = false;\n  };\n\n  move = (translation) => {\n    const currentKey = `${this.x}.${this.y}`;\n    const nextX = (translation.x || 0) + this.x;\n    const nextY = (translation.y || 0) + this.y;\n    const newKey = `${nextX}.${nextY}`;\n    const self = this;\n\n    if (this.nodeMap[currentKey][newKey]) {\n      const completion = () => {\n        self.x = nextX;\n        self.y = nextY;\n        if (newKey === self.destNodeKey) {\n          eventServer.emit(events.MAZEGAME.DESTFOUND,\n            { x: self.startX,\n              y: self.startY,\n              self,\n              graph: self.mzGraphRef,\n            },\n            self.gohome);\n        } else {\n          self.maybeKeepMoving(newKey, currentKey);\n        }\n      };\n\n      // animate\n      Velocity.animate({\n        e: self.userNodeRef.current,\n        p: { cx: nextX, cy: nextY, completion },\n        o: { duration: 50 },\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    this.x = this.props.cx;\n    this.y = this.props.cy;\n    this.startNodeKey = `${this.x}.${this.y}`;\n    this.startX = parseInt(this.x, 10);\n    this.startY = parseInt(this.y, 10);\n    this.r = this.props.r;\n    this.destNodeKey = this.props.destnodekey;\n    this.map = this.props.map;\n    this.offset = this.props.offset;\n    this.props.handleswipebindings(this.keyboardListener);\n    this.userNodeRef.current.focus(); // makes keyboard listener work immediately\n  };\n\n  componentDidUpdate = () => {\n    this.props.map.forEach((n) => {\n      const sibs = {};\n      // eslint-disable-next-line no-return-assign\n      n.siblingKeys.forEach(k => sibs[k] = 1);\n      this.nodeMap[n.key] = sibs;\n    });\n    this.destNodeKey = this.props.destnodekey;\n    this.mzGraphRef = this.props.mzgraphref;\n  };\n\n  render = () => (\n      <circle\n        ref={this.userNodeRef}\n        onKeyDown={e => this.keyboardListener(e)}\n        onBlur={() => {\n          this.userNodeRef.current.focus();\n        }}\n        className=\"mz-node user-node\"\n        cx={this.x}\n        cy={this.y}\n        r={this.r}\n        tabIndex=\"0\"\n        map={this.map}\n        destnodekey={this.destNodeKey}\n        offset={this.offset}\n        mzgraphref={this.mzGraphRef}\n      />\n  );\n}\n\n\n// available properties\n\n// tagName: PropTypes.string,\n// className: PropTypes.string,\n// style: PropTypes.object,\n// children: PropTypes.node,\n// allowMouseEvents: PropTypes.bool,\n// onSwipeUp: PropTypes.func,\n// onSwipeDown: PropTypes.func,\n// onSwipeLeft: PropTypes.func,\n// onSwipeRight: PropTypes.func,\n// onSwipeStart: PropTypes.func,\n// onSwipeMove: PropTypes.func,\n// onSwipeEnd: PropTypes.func\n","import _ from 'lodash';\nimport MZNode from './MZNode';\n\nexport default class MazeNodeFactory {\n  buildNodeArray = ({ rows, cols, spacing }) => {\n    const arrayOfNodes = [];\n    const offset = spacing / 2;\n    for (let i = 0; i < cols; i += 1) {\n      for (let j = 0; j < rows; j += 1) {\n        const x = i * spacing + offset;\n        const y = j * spacing + offset;\n        const isStart = i + j === 0;\n        const isDest = i === cols - 1 && j === rows - 1;\n        const discoveredBy = '';\n        arrayOfNodes.push(\n          new MZNode({\n            x,\n            y,\n            isStart,\n            isDest,\n            discoveredBy,\n          }),\n        );\n      }\n    }\n    return arrayOfNodes;\n  };\n\n  removeAllSiblings = (nodes) => {\n    nodes.forEach((val) => {\n      // eslint-disable-next-line no-param-reassign\n      val.siblingKeys = null;\n    });\n  };\n\n  addSiblings = (params) => {\n    const { rows, cols, spacing, nodeArray } = params;\n\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    const r = spacing;\n    const r2 = Math.round(r / 2);\n    for (let i = 0; i < cols; i += 1) {\n      for (let j = 0; j < rows - 1; j += 1) {\n        x2 = i * r;\n        x1 = x2;\n        y1 = j * r;\n        y2 = y1 + r;\n        x1 += r2;\n        x2 += r2;\n        y1 += r2;\n        y2 += r2;\n        this.bindNodes([`${x1}.${y1}`, `${x2}.${y2}`], nodeArray);\n      }\n    }\n    for (let i = 0; i < rows; i += 1) {\n      for (let j = 0; j < cols - 1; j += 1) {\n        y2 = i * r;\n        y1 = y2;\n        x1 = j * r;\n        x2 = x1 + r;\n        x1 += r2;\n        x2 += r2;\n        y1 += r2;\n        y2 += r2;\n        this.bindNodes([`${x1}.${y1}`, `${x2}.${y2}`], nodeArray);\n      }\n    }\n\n    return nodeArray;\n  };\n\n  bindNodes = (nodeKeys, nodeArray) => {\n    const [key1, key2] = nodeKeys;\n    const nodeRef1 = _.find(nodeArray, n => n.key === key1);\n    const nodeRef2 = _.find(nodeArray, n => n.key === key2);\n\n    nodeRef1.siblingKeys.push(nodeRef2.key);\n    nodeRef2.siblingKeys.push(nodeRef1.key);\n    nodeRef1.siblingKeys = _.uniq(nodeRef1.siblingKeys);\n    nodeRef2.siblingKeys = _.uniq(nodeRef2.siblingKeys);\n  };\n\n  getNodes({ rows, cols, spacing }) {\n    const nodeArray = this.buildNodeArray({ rows, cols, spacing });\n    return this.addSiblings({\n      rows,\n      cols,\n      spacing,\n      nodeArray,\n    });\n  }\n}\n","import React from 'react';\n\nconst DestNode = props => (\n  <circle\n    className=\"mz-node dest-node\"\n    cx={props.x}\n    cy={props.y}\n    r={props.r}\n  />\n);\n\nexport default DestNode;\n","import _ from 'lodash';\nimport { getOrthogonalKey } from '../../utilities';\n\nexport class MazePath {\n  constructor(nodeKey1, nodeKey2) {\n    this.nodeKeys = [nodeKey1, nodeKey2];\n    this.id = `${nodeKey1}.${nodeKey2}`;\n    this.key = this.id;\n    const [x1, y1, x2, y2] = this.id.split('.').map(el => parseInt(el, 10));\n    this.crossWall = getOrthogonalKey(x1, y1, x2, y2);\n  }\n}\n\nexport class MazePathFactory {\n  getPathsWithRowsAndCols = ({ spacing: r, rows, cols }) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    const r2 = Math.round(r / 2);\n    const pathCache = [];\n\n    for (let i = 0; i < cols; i += 1) {\n      for (let j = 0; j < rows - 1; j += 1) {\n        x1 = x2 = i * r;\n        y1 = y2 = j * r;\n        x1 += x2 += y1 += y2 += r2;\n        pathCache.push(new MazePath(`${x1}.${y1}`, `${x2}.${y2}`));\n      }\n    }\n\n    for (let i = 0; i < rows; i += 1) {\n      for (let j = 0; j < cols - 1; j += 1) {\n        x1 = j * r;\n        y1 = y2 = i * r;\n        x2 = j * r + r;\n        x1 += x2 += x2 += y1 += y2 += r2;\n        pathCache.push(new MazePath(`${x1}.${y1}`, `${x2}.${y2}`));\n      }\n    }\n\n    return pathCache;\n  };\n\n  // eslint-disable-next-line arrow-body-style\n  getPathsWithInactiveWalls = ({ excludeWalls }) => {\n    return _.map(excludeWalls, (w) => {\n      let [x1, y1, x2, y2] = w.split('.');\n      [x1, y1, x2, y2] = getOrthogonalKey(+x1, +y1, +x2, +y2).split('.');\n      return new MazePath(`${x1}.${y1}`, `${x2}.${y2}`);\n    });\n  };\n}\n","import React from 'react';\nimport { filter, includes } from 'lodash';\n\nexport class MZWall extends React.Component {\n  state = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n    css: '',\n    length: 0,\n    pathKey: ''\n  };\n\n  componentDidMount() {\n    const { x1, y1, x2, y2, css } = this.props;\n    const length = x1 === x2 ? Math.round(y2 - y1) : Math.round(x2 - x1);\n    this.setState(() => ({\n      x1,\n      y1,\n      x2,\n      y2,\n      css,\n      length,\n      pathKey: ''\n    }));\n    this.setState(() => ({\n      pathKey: this.getPathKey()\n    }));\n  }\n\n  getPathKey = () => {\n    const d = Math.round(this.state.length / 2);\n    const x2 = this.state.x1 + d;\n    const y2 = this.state.y1 + d;\n    if (this.state.x1 === this.state.x2) {\n      const x1 = this.state.x1 - d;\n      const y1 = this.state.y1 + d;\n      return `${+x1}.${+y1}.${+x2}.${+y2}`;\n    }\n    const x1 = this.state.x1 + d;\n    const y1 = this.state.y1 - d;\n    return `${+x1}.${+y1}.${+x2}.${+y2}`;\n  };\n\n  render() {\n    return (\n      <line\n        id={this.props.id}\n        className=\"mz-wall\"\n        x1={this.props.x1}\n        y1={this.props.y1}\n        x2={this.props.x2}\n        y2={this.props.y2}\n      />\n    );\n  }\n}\n\nexport class MazeWallFactory {\n  getWalls = ({ rows, cols, spacing, excludeWalls }) => {\n    const wallCache = [];\n    let x1;\n    let y1;\n    let x2;\n    let y2;\n    for (let i = 1; i <= cols - 1; i += 1) {\n      for (let j = 0; j < rows; j += 1) {\n        x2 = i * spacing;\n        x1 = x2;\n        y1 = j * spacing;\n        y2 = parseInt((y1 + spacing), 10);\n        const id = `${x1}.${y1}.${x2}.${y2}`;\n        wallCache.push({ id, x1, y1, x2, y2 });\n      }\n    }\n    for (let i = 1; i <= rows - 1; i += 1) {\n      for (let j = 0; j < cols; j += 1) {\n        y2 = i * spacing;\n        y1 = y2;\n        x1 = j * spacing;\n        x2 = parseInt((x1 + spacing), 10);\n        const id = `${x1}.${y1}.${x2}.${y2}`;\n        wallCache.push({ id, x1, y1, x2, y2 });\n      }\n    }\n    return filter(wallCache, w => !includes(excludeWalls, w.id));\n  };\n}\n","/* eslint-disable no-underscore-dangle */\nimport _ from 'lodash';\nimport { shuffle, getOrthogonalKey } from '../utilities';\n\n/**\n * @description Level One creates a maze using the depth-first searching algorithm.\n */\nexport default class LevelOne {\n  prepareLocalDataStore(maze) {\n    this.nodeMap = {};\n    this.route = [];\n    this.destNodeKey = '';\n    this.maxDx = 0;\n    const { nodes } = maze;\n    nodes.forEach((n) => {\n      const clonedNode = JSON.parse(JSON.stringify(n));\n      const clonedKeys = [...n.siblingKeys];\n      clonedNode.siblingKeys = shuffle(clonedKeys);\n      clonedNode.discoveredBy = null;\n      clonedNode.dXFromStart = 0;\n      this.nodeMap[n.key] = clonedNode;\n    });\n\n    this.startNode = _.find(this.nodeMap, n => n.isStart);\n    this.startNode.isVisited = true;\n  }\n\n  run(mazeData) {\n    this.prepareLocalDataStore(mazeData);\n    this.generateMazeWithDfs();\n    return {\n      route: this.route,\n      destNodeKey: this.destNodeKey,\n    };\n  }\n\n  updateCount(w) {\n    w.siblingKeys.forEach((sibKey) => {\n      const sib = this.nodeMap[sibKey];\n      sib.dXFromStart = !sib.isVisited ? w.dXFromStart + 1 : sib.dXFromStart;\n      if (sib.dXFromStart > this.maxDx) {\n        this.maxDx = sib.dXFromStart;\n        this.destNodeKey = sib.key;\n      }\n    });\n  }\n\n  updateNodeWithMaxDXFromStart(n) {\n    if (n.dXFromStart > this.maxDx) {\n      this.maxDx = n.dXFromStart;\n      this.destNodeKey = n.key;\n    }\n  }\n\n  generateMazeWithDfs() {\n    const stack = [];\n    stack.push(this.startNode);\n    while (stack.length) {\n      const w = stack.pop();\n      this.visit(w);\n      this.updateCount(w);\n\n      w.siblingKeys.forEach((sibKey) => {\n        if (!this.nodeMap[sibKey].isVisited) {\n          this.nodeMap[sibKey].discoveredBy = w.key;\n          if (w.isStart) {\n            this.nodeMap[sibKey].dXFromStart = 1;\n          } else if (!w.isStart) {\n            this.nodeMap[sibKey].dXFromStart = w.dXFromStart + 1;\n          }\n          stack.push(this.nodeMap[sibKey]); // push\n        }\n      });\n    }\n  }\n\n  visit(n) {\n    if (n.isVisited === false) {\n      n.isVisited = true; // eslint-disable-line no-param-reassign\n      const [discX, discY] = n.discoveredBy.split('.');\n      const [nX, nY] = n.key.split('.');\n      const { x1, y1, x2, y2 } = {\n        x1: parseInt(discX, 10),\n        y1: parseInt(discY, 10),\n        x2: parseInt(nX, 10),\n        y2: parseInt(nY, 10),\n      };\n      const correspondingWallToInactivate = getOrthogonalKey(x1, y1, x2, y2);\n      this.route.push(correspondingWallToInactivate);\n    }\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { mazeGraphDefaults as DEFAULTS } from '../../utilities';\nimport { MazeNodeFactory, UserNode } from './MZNode/index';\nimport DestNode from '../mazeGraphComponents/DestNode';\nimport { MazePathFactory } from './MazePath';\nimport { MZWall, MazeWallFactory } from './MZWall';\nimport { LevelOne } from '../../mazeRenderers/index';\n\nexport default class MZGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: this.props.height,\n      width: this.props.width,\n      spacing: DEFAULTS.desktopSpacing,\n      cols: 0,\n      rows: 0,\n      nodes: null,\n      allPaths: [],\n      walls: [],\n      excludeWalls: [],\n      destNodeX: 0,\n      destNodeY: 0,\n    };\n    this.mazeGraphRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.setState((prevState, props) => ({\n      cols: Math.floor((props.width * 0.80) / prevState.spacing),\n      rows: Math.floor((props.height * 0.80) / prevState.spacing),\n      currentLevel: this.currentLevel || 1,\n    }));\n\n    this.setState(prevState => ({\n      width: prevState.spacing * prevState.cols,\n      height: prevState.spacing * prevState.rows,\n    }));\n\n    this.setState(prevState => ({\n      nodes: new MazeNodeFactory().getNodes(prevState),\n    }));\n\n    this.setState((prevState) => {\n      const mazeCreator = new LevelOne();\n      const result = mazeCreator.run(prevState);\n      const [x, y] = result.destNodeKey.split('.');\n      return {\n        excludeWalls: result.route,\n        destNodeX: x,\n        destNodeY: y,\n      };\n    });\n\n    this.setState(prevState => ({\n      walls: new MazeWallFactory().getWalls(prevState),\n    }), () => {\n      this.setState(prevState => ({\n        allPaths: new MazePathFactory().getPathsWithInactiveWalls(prevState),\n      }), () => {\n        this.updateSiblingsUsingPaths();\n      });\n    });\n  };\n\n  updateSiblingsUsingPaths = () => {\n    const clonedNodes = JSON.parse(JSON.stringify(this.state.nodes));\n    clonedNodes.forEach((n) => {\n      n.siblingKeys = []; // eslint-disable-line no-param-reassign\n    });\n\n    this.state.allPaths.forEach((mazePath) => {\n      const [node1, node2] = mazePath.nodeKeys;\n      const nodeRef1 = _.find(clonedNodes, n => n.key === node1);\n      const nodeRef2 = _.find(clonedNodes, n => n.key === node2);\n\n      if (nodeRef1 && nodeRef2) {\n        nodeRef1.siblingKeys.push(nodeRef2.key);\n        nodeRef2.siblingKeys.push(nodeRef1.key);\n        nodeRef1.siblingKeys = _.uniq(nodeRef1.siblingKeys);\n        nodeRef2.siblingKeys = _.uniq(nodeRef2.siblingKeys);\n      }\n    });\n\n    this.setState((prevState, props) => ({\n      nodes: clonedNodes,\n    }));\n  };\n\n  getUserControlNode = () => (\n      <UserNode\n        cx={Math.round(DEFAULTS.desktopSpacing / 2)}\n        cy={Math.round(DEFAULTS.desktopSpacing / 2)}\n        r={Math.round(DEFAULTS.desktopSpacing * 0.10)}\n        map={this.state.nodes}\n        destnodekey={`${this.state.destNodeX}.${this.state.destNodeY}`}\n        offset={DEFAULTS.desktopSpacing}\n        mzgraphref={this.mazeGraphRef}\n        handleswipebindings={this.props.handleswipebindings}\n      />\n  );\n\n  getInnerWalls = () => this.state.walls.map((wall) => {\n    const { id, x1, y1, x2, y2 } = wall;\n    return (<MZWall key={id} id={id} x1={x1} y1={y1} x2={x2} y2={y2} className=\"mz-wall insidewall\" />);\n  });\n\n  getOutterWalls = () => (\n      <React.Fragment>\n        <MZWall x1={0} y1={0} x2={0} y2={this.state.height} className=\"outsidewall\" />\n        <MZWall x1={0} y1={0} x2={this.state.width} y2={0} className=\"outsidewall\" />\n        <MZWall x1={this.state.width} y1={0} x2={this.state.width} y2={this.state.height} className=\"outsidewall\" />\n        <MZWall x1={0} y1={this.state.height} x2={this.state.width} y2={this.state.height} className=\"outsidewall\" />\n      </React.Fragment>\n  );\n\n  render = () => (\n      <div ref={this.mazeGraphRef}>\n        <svg width={this.state.width} height={this.state.height} id=\"mz-svg\">\n          {this.getOutterWalls()}\n          {this.getInnerWalls()}\n          {this.getUserControlNode()}\n          <DestNode\n            x={this.state.destNodeX}\n            y={this.state.destNodeY}\n            r={Math.round(DEFAULTS.desktopSpacing * 0.10)}\n          />\n        </svg>\n      </div>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default class SettingsRow extends Component {\n  refreshMaze = () => {\n    window.location.reload();\n  };\n\n  render = () => {\n    return (\n      <div className=\"three ui buttons\">\n        <button type=\"button\" className=\"massive ui inverted violet icon button\">\n          <i className=\"large flag checkered icon\" />\n        </button>\n        <button onClick={this.refreshMaze} type=\"button\" className=\"massive ui inverted purple icon button\">\n          <i className=\"large vertically flipped recycle icon\" />\n        </button>\n        <button type=\"button\" className=\"massive ui inverted teal icon button\">\n          <i className=\"large ellipsis horizontal icon\" />\n        </button>\n      </div>\n    );\n  };\n}\n","export const KEYCODEMAP = {\n  UP: 38,\n  DOWN: 40,\n  RIGHT: 39,\n  LEFT: 37,\n};\n\nexport const KeyEventKeyValues = {\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  RIGHT: 'ArrowRight',\n  LEFT: 'ArrowLeft',\n};\n\nexport const KeyEventKeyValuesIEEdge = {\n  UP: 'Up',\n  DOWN: 'Down',\n  RIGHT: 'Right',\n  LEFT: 'Left',\n};\n","import React from 'react';\nimport Swipe from 'react-easy-swipe';\nimport MazeGraph from '../mazeGraphComponents/MZGraph';\nimport SettingsRow from '../settings/SettingsRow';\nimport { KEYCODEMAP } from '../../utilities/keyboardEventHelper';\n\nexport default class MazeContainer extends React.Component {\n  state = {\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    synthClick: null,\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n    });\n  };\n\n  handleSwipeBindings = (cb) => {\n    if (cb && !this.state.synthClick) {\n      this.setState({\n        synthClick: cb,\n      });\n    }\n  }\n\n  getSwipeProps = () => ({\n    onSwipeUp: () => this.state.synthClick({ which: KEYCODEMAP.UP }),\n    onSwipeDown: () => this.state.synthClick({ which: KEYCODEMAP.DOWN }),\n    onSwipeLeft: () => this.state.synthClick({ which: KEYCODEMAP.LEFT }),\n    onSwipeRight: () => this.state.synthClick({ which: KEYCODEMAP.RIGHT }),\n    onSwipeMove: () => true,\n  });\n\n  render() {\n    return (\n      <>\n        <Swipe {...this.getSwipeProps()}>\n            <MazeGraph\n              className=\"mz-container\"\n              height={this.state.windowHeight}\n              width={this.state.windowWidth}\n              handleswipebindings={this.handleSwipeBindings}\n            />\n        </Swipe>\n        <SettingsRow />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport MazeContainer from './MazeContainer';\n\nexport default class GameContainer extends React.Component {\n  render() {\n    return <MazeContainer />;\n  }\n}\n","import React from 'react';\nimport GameContainer from './containers/GameContainer';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"column\">\n    <GameContainer />\n  </div>\n);\n\nexport default App;\n","/* eslint-disable func-names */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}